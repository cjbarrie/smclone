{"ast":null,"code":"var _jsxFileName = \"/Users/cbarrie6/Dropbox/sandbox/smclone/frontend/src/components/Timeline.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/Timeline.css\";\nimport posthog from \"posthog-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timeline = () => {\n  _s();\n  const [tweets, setTweets] = useState([]);\n  const [userInteractions, setUserInteractions] = useState({});\n  const [likedTweets, setLikedTweets] = useState(new Set());\n  const [retweetedTweets, setRetweetedTweets] = useState(new Set());\n  useEffect(() => {\n    // Fetch the tweets from the backend API\n    axios.get(\"http://localhost:5001/tweets\").then(response => {\n      setTweets(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching tweets:\", error);\n    });\n  }, []);\n  function handleButtonClick() {\n    posthog.capture(\"button_click\", {\n      button_text: \"Example Button\"\n    });\n    // Your button click logic here\n  }\n  // const handleLikeClick = (tweetId) => {\n  //   posthog.capture('like_click', { tweet_id: tweetId });\n  //   toggleLike(tweetId);\n  // };\n  // const handleRetweetClick = (tweetId) => {\n  //   posthog.capture('retweet_click', { tweet_id: tweetId });\n  //   toggleRetweet(tweetId);\n  // };\n  const toggleLike = tweetId => {\n    var _userInteractions$twe;\n    const hasLiked = ((_userInteractions$twe = userInteractions[tweetId]) === null || _userInteractions$twe === void 0 ? void 0 : _userInteractions$twe.hasLiked) || false;\n    setUserInteractions({\n      ...userInteractions,\n      [tweetId]: {\n        ...userInteractions[tweetId],\n        hasLiked: !hasLiked\n      }\n    });\n    setTweets(tweets.map(tweet => tweet.id === tweetId ? {\n      ...tweet,\n      likes: hasLiked ? tweet.likes - 1 : tweet.likes + 1\n    } : tweet));\n  };\n  const toggleRetweet = tweetId => {\n    var _userInteractions$twe2;\n    const hasRetweeted = ((_userInteractions$twe2 = userInteractions[tweetId]) === null || _userInteractions$twe2 === void 0 ? void 0 : _userInteractions$twe2.hasRetweeted) || false;\n    setUserInteractions({\n      ...userInteractions,\n      [tweetId]: {\n        ...userInteractions[tweetId],\n        hasRetweeted: !hasRetweeted\n      }\n    });\n    setTweets(tweets.map(tweet => tweet.id === tweetId ? {\n      ...tweet,\n      retweets: hasRetweeted ? tweet.retweets - 1 : tweet.retweets + 1\n    } : tweet));\n  };\n  const handleInteraction = (type, tweetId) => {\n    if (type === 'like') {\n      const newLikedTweets = new Set(likedTweets);\n      if (newLikedTweets.has(tweetId)) {\n        newLikedTweets.delete(tweetId);\n      } else {\n        newLikedTweets.add(tweetId);\n      }\n      setLikedTweets(newLikedTweets);\n    } else if (type === 'retweet') {\n      const newRetweetedTweets = new Set(retweetedTweets);\n      if (newRetweetedTweets.has(tweetId)) {\n        newRetweetedTweets.delete(tweetId);\n      } else {\n        newRetweetedTweets.add(tweetId);\n      }\n      setRetweetedTweets(newRetweetedTweets);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Timeline\",\n    children: [tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Tweet\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"Tweet-avatar\",\n        src: tweet.profile_image_url,\n        alt: \"Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Tweet-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Tweet-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Tweet-name\",\n            children: tweet.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Tweet-username\",\n            children: [\"@\", tweet.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Tweet-timestamp\",\n            children: tweet.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Tweet-text\",\n          children: tweet.tweet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Tweet-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Tweet-stat\",\n            onClick: event => handleRetweetClick(tweet.id, event),\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              width: \"16\",\n              height: \"16\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M22 2v20l-4-4H2V6h16l4-4z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), tweet.retweets_count + (retweetedTweets.has(tweet.id) ? 1 : 0)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Tweet-stat\",\n            onClick: event => handleLikeClick(tweet.id, event),\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              width: \"16\",\n              height: \"16\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M22 11.08V12a10 10 0 1 1-5.93-9.14\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                points: \"22 4 12 14.01 9 11.01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), tweet.likes_count + (likedTweets.has(tweet.id) ? 1 : 0)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, tweet.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: \"Example Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Timeline, \"UnYlfipty2EYFPMkHrdFMHPONUY=\");\n_c = Timeline;\nexport default Timeline;\nvar _c;\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"names":["React","useState","useEffect","axios","posthog","jsxDEV","_jsxDEV","Timeline","_s","tweets","setTweets","userInteractions","setUserInteractions","likedTweets","setLikedTweets","Set","retweetedTweets","setRetweetedTweets","get","then","response","data","catch","error","console","handleButtonClick","capture","button_text","toggleLike","tweetId","_userInteractions$twe","hasLiked","map","tweet","id","likes","toggleRetweet","_userInteractions$twe2","hasRetweeted","retweets","handleInteraction","type","newLikedTweets","has","delete","add","newRetweetedTweets","className","children","src","profile_image_url","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","username","timestamp","onClick","event","handleRetweetClick","viewBox","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","retweets_count","handleLikeClick","points","likes_count","_c","$RefreshReg$"],"sources":["/Users/cbarrie6/Dropbox/sandbox/smclone/frontend/src/components/Timeline.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/Timeline.css\";\nimport posthog from \"posthog-js\";\n\nconst Timeline = () => {\n  const [tweets, setTweets] = useState([]);\n  const [userInteractions, setUserInteractions] = useState({});\n  const [likedTweets, setLikedTweets] = useState(new Set());\n  const [retweetedTweets, setRetweetedTweets] = useState(new Set());\n\n\n  useEffect(() => {\n    // Fetch the tweets from the backend API\n    axios.get(\"http://localhost:5001/tweets\")\n      .then(response => {\n        setTweets(response.data);\n      })\n      .catch(error => {\n        console.error(\"Error fetching tweets:\", error);\n      });\n  }, []);\n  function handleButtonClick() {\n    posthog.capture(\"button_click\", { button_text: \"Example Button\" });\n    // Your button click logic here\n  }\n  // const handleLikeClick = (tweetId) => {\n  //   posthog.capture('like_click', { tweet_id: tweetId });\n  //   toggleLike(tweetId);\n  // };\n  // const handleRetweetClick = (tweetId) => {\n  //   posthog.capture('retweet_click', { tweet_id: tweetId });\n  //   toggleRetweet(tweetId);\n  // };\n  const toggleLike = (tweetId) => {\n    const hasLiked = userInteractions[tweetId]?.hasLiked || false;\n    \n    setUserInteractions({\n      ...userInteractions,\n      [tweetId]: { ...userInteractions[tweetId], hasLiked: !hasLiked }\n    });\n  \n    setTweets(tweets.map(tweet => tweet.id === tweetId ? { ...tweet, likes: hasLiked ? tweet.likes - 1 : tweet.likes + 1 } : tweet));\n  };\n  \n  const toggleRetweet = (tweetId) => {\n    const hasRetweeted = userInteractions[tweetId]?.hasRetweeted || false;\n    \n    setUserInteractions({\n      ...userInteractions,\n      [tweetId]: { ...userInteractions[tweetId], hasRetweeted: !hasRetweeted }\n    });\n  \n    setTweets(tweets.map(tweet => tweet.id === tweetId ? { ...tweet, retweets: hasRetweeted ? tweet.retweets - 1 : tweet.retweets + 1 } : tweet));\n  };\n  const handleInteraction = (type, tweetId) => {\n    if (type === 'like') {\n      const newLikedTweets = new Set(likedTweets);\n      if (newLikedTweets.has(tweetId)) {\n        newLikedTweets.delete(tweetId);\n      } else {\n        newLikedTweets.add(tweetId);\n      }\n      setLikedTweets(newLikedTweets);\n    } else if (type === 'retweet') {\n      const newRetweetedTweets = new Set(retweetedTweets);\n      if (newRetweetedTweets.has(tweetId)) {\n        newRetweetedTweets.delete(tweetId);\n      } else {\n        newRetweetedTweets.add(tweetId);\n      }\n      setRetweetedTweets(newRetweetedTweets);\n    }\n  };\n  return (\n    <div className=\"Timeline\">\n      {tweets.map((tweet) => (\n        <div key={tweet.id} className=\"Tweet\">\n          <img className=\"Tweet-avatar\" src={tweet.profile_image_url} alt=\"Avatar\" />\n          <div className=\"Tweet-content\">\n            <div className=\"Tweet-header\">\n              <span className=\"Tweet-name\">{tweet.name}</span>\n              <span className=\"Tweet-username\">@{tweet.username}</span>\n              <span className=\"Tweet-timestamp\">{tweet.timestamp}</span>\n            </div>\n            <div className=\"Tweet-text\">{tweet.tweet}</div>\n            <div className=\"Tweet-stats\">\n              <div className=\"Tweet-stat\" onClick={(event) => handleRetweetClick(tweet.id, event)}>\n                <svg\n                  viewBox=\"0 0 24 24\"\n                  width=\"16\"\n                  height=\"16\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  <path d=\"M22 2v20l-4-4H2V6h16l4-4z\"></path>\n                </svg>\n                {tweet.retweets_count + (retweetedTweets.has(tweet.id) ? 1 : 0)}\n              </div>\n              <div className=\"Tweet-stat\" onClick={(event) => handleLikeClick(tweet.id, event)}>\n                <svg\n                  viewBox=\"0 0 24 24\"\n                  width=\"16\"\n                  height=\"16\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\n                  <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\n                </svg>\n                {tweet.likes_count + (likedTweets.has(tweet.id) ? 1 : 0)}\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n      <button onClick={handleButtonClick}>Example Button</button>\n    </div>\n  );  \n};\n\nexport default Timeline;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}