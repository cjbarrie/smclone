{"ast":null,"code":"var _jsxFileName = \"/Users/cbarrie6/Dropbox/sandbox/smclone/frontend/src/components/Timeline.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/Timeline.css\";\nimport posthog from \"posthog-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timeline = () => {\n  _s();\n  const [tweets, setTweets] = useState([]);\n  const [likedTweets, setLikedTweets] = useState(new Set());\n  const [retweetedTweets, setRetweetedTweets] = useState(new Set());\n  useEffect(() => {\n    axios.get('http://localhost:5001/tweets').then(response => {\n      setTweets(response.data);\n    }).catch(error => {\n      console.error('Error fetching tweets:', error);\n    });\n  }, []);\n  const handleLikeClick = (tweetId, event) => {\n    event.stopPropagation();\n    toggleLike(tweetId);\n    handleInteraction('like_click', tweetId);\n  };\n  const handleRetweetClick = (tweetId, event) => {\n    event.stopPropagation();\n    toggleRetweet(tweetId);\n    handleInteraction('retweet_click', tweetId);\n  };\n  const toggleLike = tweetId => {\n    setLikedTweets(prevLikedTweets => {\n      const newLikedTweets = new Set(prevLikedTweets);\n      if (newLikedTweets.has(tweetId)) {\n        newLikedTweets.delete(tweetId);\n      } else {\n        newLikedTweets.add(tweetId);\n      }\n      return newLikedTweets;\n    });\n  };\n  const toggleRetweet = tweetId => {\n    setRetweetedTweets(prevRetweetedTweets => {\n      const newRetweetedTweets = new Set(prevRetweetedTweets);\n      if (newRetweetedTweets.has(tweetId)) {\n        newRetweetedTweets.delete(tweetId);\n      } else {\n        newRetweetedTweets.add(tweetId);\n      }\n      return newRetweetedTweets;\n    });\n  };\n  const handleInteraction = (interaction, tweetId) => {\n    posthog.capture(interaction, {\n      tweet_id: tweetId\n    });\n  };\n  const handleButtonClick = () => {\n    posthog.capture('button_click', {\n      button_text: 'Example Button'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Timeline\",\n    children: [tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Tweet\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"Tweet-avatar\",\n        src: tweet.profile_image_url,\n        alt: \"Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Tweet-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Tweet-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Tweet-name\",\n            children: tweet.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Tweet-username\",\n            children: [\"@\", tweet.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Tweet-timestamp\",\n            children: tweet.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Tweet-text\",\n          children: tweet.tweet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Tweet-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Tweet-stat\",\n            onClick: event => handleRetweetClick(tweet.id, event),\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              width: \"16\",\n              height: \"16\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M22 2v20l-4-4H2V6h16l4-4z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), tweet.retweets_count + (retweetedTweets.has(tweet.id) ? 1 : 0)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Tweet-stat\",\n            onClick: event => handleLikeClick(tweet.id, event),\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 24 24\",\n              width: \"16\",\n              height: \"16\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M22 11.08V12a10 10 0 1 1-5.93-9.14\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                points: \"22 4 12 14.01 9 11.01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), tweet.likes_count + (likedTweets.has(tweet.id) ? 1 : 0)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, tweet.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: \"Example Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n};\n_s(Timeline, \"bC57bzQBpveLItU7lXOHIqpGUao=\");\n_c = Timeline;\nexport default Timeline;\nvar _c;\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"names":["React","useState","useEffect","axios","posthog","jsxDEV","_jsxDEV","Timeline","_s","tweets","setTweets","likedTweets","setLikedTweets","Set","retweetedTweets","setRetweetedTweets","get","then","response","data","catch","error","console","handleLikeClick","tweetId","event","stopPropagation","toggleLike","handleInteraction","handleRetweetClick","toggleRetweet","prevLikedTweets","newLikedTweets","has","delete","add","prevRetweetedTweets","newRetweetedTweets","interaction","capture","tweet_id","handleButtonClick","button_text","className","children","map","tweet","src","profile_image_url","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","username","timestamp","onClick","id","viewBox","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","retweets_count","points","likes_count","_c","$RefreshReg$"],"sources":["/Users/cbarrie6/Dropbox/sandbox/smclone/frontend/src/components/Timeline.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/Timeline.css\";\nimport posthog from \"posthog-js\";\n\nconst Timeline = () => {\n  const [tweets, setTweets] = useState([]);\n  const [likedTweets, setLikedTweets] = useState(new Set());\n  const [retweetedTweets, setRetweetedTweets] = useState(new Set());\n\n  useEffect(() => {\n    axios\n      .get('http://localhost:5001/tweets')\n      .then((response) => {\n        setTweets(response.data);\n      })\n      .catch((error) => {\n        console.error('Error fetching tweets:', error);\n      });\n  }, []);\n\n  const handleLikeClick = (tweetId, event) => {\n    event.stopPropagation();\n    toggleLike(tweetId);\n    handleInteraction('like_click', tweetId);\n  };\n\n  const handleRetweetClick = (tweetId, event) => {\n    event.stopPropagation();\n    toggleRetweet(tweetId);\n    handleInteraction('retweet_click', tweetId);\n  };\n\n  const toggleLike = (tweetId) => {\n    setLikedTweets((prevLikedTweets) => {\n      const newLikedTweets = new Set(prevLikedTweets);\n      if (newLikedTweets.has(tweetId)) {\n        newLikedTweets.delete(tweetId);\n      } else {\n        newLikedTweets.add(tweetId);\n      }\n      return newLikedTweets;\n    });\n  };\n\n  const toggleRetweet = (tweetId) => {\n    setRetweetedTweets((prevRetweetedTweets) => {\n      const newRetweetedTweets = new Set(prevRetweetedTweets);\n      if (newRetweetedTweets.has(tweetId)) {\n        newRetweetedTweets.delete(tweetId);\n      } else {\n        newRetweetedTweets.add(tweetId);\n      }\n      return newRetweetedTweets;\n    });\n  };\n\n  const handleInteraction = (interaction, tweetId) => {\n    posthog.capture(interaction, { tweet_id: tweetId });\n  };\n  const handleButtonClick = () => {\n    posthog.capture('button_click', { button_text: 'Example Button' });\n  };\nreturn (\n  <div className=\"Timeline\">\n    {tweets.map((tweet) => (\n      <div key={tweet.id} className=\"Tweet\">\n        <img className=\"Tweet-avatar\" src={tweet.profile_image_url} alt=\"Avatar\" />\n        <div className=\"Tweet-content\">\n          <div className=\"Tweet-header\">\n            <span className=\"Tweet-name\">{tweet.name}</span>\n            <span className=\"Tweet-username\">@{tweet.username}</span>\n            <span className=\"Tweet-timestamp\">{tweet.timestamp}</span>\n          </div>\n          <div className=\"Tweet-text\">{tweet.tweet}</div>\n          <div className=\"Tweet-stats\">\n            <div className=\"Tweet-stat\" onClick={(event) => handleRetweetClick(tweet.id, event)}>\n              <svg\n                viewBox=\"0 0 24 24\"\n                width=\"16\"\n                height=\"16\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              >\n                <path d=\"M22 2v20l-4-4H2V6h16l4-4z\"></path>\n              </svg>\n              {tweet.retweets_count + (retweetedTweets.has(tweet.id) ? 1 : 0)}\n            </div>\n            <div className=\"Tweet-stat\" onClick={(event) => handleLikeClick(tweet.id, event)}>\n              <svg\n                viewBox=\"0 0 24 24\"\n                width=\"16\"\n                height=\"16\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              >\n                <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\n                <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\n              </svg>\n              {tweet.likes_count + (likedTweets.has(tweet.id) ? 1 : 0)}\n            </div>\n          </div>\n        </div>\n      </div>\n    ))}\n    <button onClick={handleButtonClick}>Example Button</button>\n  </div>\n);\n};\n\nexport default Timeline;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}